slug: bolt-basics-on-linux
id: diticbtrwatq
type: track
title: Bolt Basics on Linux
teaser: Install Bolt and manage your first remote targets.
description: |
  Bolt is an open source orchestration tool that automates the manual work it takes to maintain your infrastructure, helping you to complete ad hoc tasks remotely on a large number of targets. For example, you can use Bolt to patch and update systems, troubleshoot servers, deploy applications, and stop and restart services.


   **You'll learn:**
    - What Bolt is and when to use it
    - How to install Bolt
    - How to verify that your installation works as expected


  **Try it out for yourself:**
    - Run Bolt commands to update the NTP service on target nodes to keep their clocks synchronized.





  **Why complete this track?**
  If you're new to Bolt, start here. Whether your goal is to quickly and easily troubleshoot ad hoc issues or deploy apps across your infrastructure, this is the first step to take to get there.

  **Prerequisites:**
   - Linux command line experience is helpful but not required.
   - NTP service familiarity is helpful but not required.



  **Before you start**
  Keep an eye on the clock. You have 30 minutes to complete this track. After 30 minutes, your learning environment expires and your work will not be saved. If you haven't completed the track, you can simply restart it and skip to any challenge.
icon: https://education-downloads.s3-us-west-2.amazonaws.com/instruqt-assets/bolt-logo-icon.png
tags:
- Puppet
- Bolt
- Linux
owner: puppet
developers:
- greg.larkin@puppet.com
- tara.swenson@puppet.com
private: true
published: true
skipping_enabled: true
challenges:
- slug: install-bolt-on-linux
  id: eqmodrpl9ij4
  type: challenge
  title: "Install Bolt \U0001F4BB"
  teaser: Install Bolt in minutes and start using it right away.
  notes:
  - type: text
    contents: |-
      # What is Bolt?
      Bolt is an open source automation tool that automates manual infrastructure maintenance tasks, including both ad hoc tasks and tasks that are part of a bigger workflow.

      Use Bolt to:
      - Patch and update systems
      - Troubleshoot servers
      - Deploy applications
      - Stop and restart services

      ## **Start this track**
      When your environment has finished spinning up, you'll see a green **Start** button at the bottom of the screen (this should take about 1 minute). Click it when you're ready to begin the track.
  assignment: "# Install Bolt\nThe best way to learn about Bolt is to try it out for
    yourself. Start by configuring the Bolt yum repository, also known as the Puppet
    package repository — by default, this isn't configured on standard Linux installations.
    Then, install Bolt.  \n\n# Step 1: Configure the Puppet package repository\nTo
    configure the Puppet package repository, run the following command:\n```\nrpm
    -Uvh https://yum.puppet.com/puppet-tools-release-el-7.noarch.rpm\n```\nThe `rpm
    -Uvh` command installs the package that configures the Bolt yum repository. The
    `-Uvh` flags tell Bolt to update the system with this package (-U), enable verbose
    logging (-v), and show a progress bar.  \n\n# Step 2: Install Bolt\n\nNow, install
    Bolt by running this command:\n```\nyum install -y puppet-bolt-3.7.1\n``` \n\nThe
    `yum` command invokes the Linux package manager, which locates the package in
    any of the configured package repositories (in this case, puppet-bolt-3.7.1) and
    installs it on the system. The package manager also installs any package dependencies.\n\nThe
    `-y` option suppresses additional installation prompts.\n\nNotice that a specific
    version (3.7.1) of Bolt is installed by running this command. The commands in
    the rest of this track work with this Bolt version. To install the latest version
    of Bolt, just omit the version number: \nyum install -y puppet-bolt \n\n✏️ **Note:**
    \nThere are many ways to install Bolt. For details, check out the [Bolt installation
    docs](https://puppet.com/docs/bolt/latest/bolt_installing.html).\n\n✔️ **Result:**
    Notice the Transaction Summary section in the output. If Bolt installed successfully,
    you'll see “Complete!” at the end of the summary. \n\nTo go to the next challenge,
    click **Check**.\n"
  tabs:
  - title: Bolt
    type: terminal
    hostname: puppet
  - title: Platform Help
    type: website
    hostname: puppet
    url: https://puppet-kmo.gitbook.io/instruqt-platform-help/
  difficulty: basic
  timelimit: 360
- slug: verify-your-bolt-installation-linux
  id: wvghomls1zpw
  type: challenge
  title: Verify Your Bolt Installation ✔️
  teaser: Make sure your Bolt installation works as expected.
  notes:
  - type: text
    contents: |
      Now that you've installed Bolt, make sure it works as expected.

      To begin the next challenge, click **Start**.
  assignment: "You can quickly confirm Bolt is installed correctly by running some
    basic Bolt commands.\r\n\r\nFirst, show the Bolt version by running this command:\r\n```\r\nbolt
    --version\r\n```\r\n\r\nThen, show the Bolt help message:\r\n```\r\nbolt --help\r\n```\r\n\r\nTo
    show all the Bolt commands, run **bolt --help** again.\r\n\r\nBolt also shows
    help for each of its subcommands. For example, to get help for the **script**
    command, run:\r\n```\r\nbolt script --help\r\n```\r\n\r\n✔️ **Result:** If Bolt
    is installed correctly, you'll see the output on the command line. \r\n\r\nTo
    continue, click **Check**."
  tabs:
  - title: Bolt
    type: terminal
    hostname: puppet
  - title: Platform Help
    type: website
    hostname: puppet
    url: https://puppet-kmo.gitbook.io/instruqt-platform-help/
  difficulty: basic
  timelimit: 360
- slug: run-bolt-commands-on-remote-targets
  id: xpxk4boeqvir
  type: challenge
  title: "Run Bolt Commands on Remote Targets \U0001F469‍\U0001F4BB"
  teaser: 'Run your first Bolt commands on remote targets. '
  notes:
  - type: text
    contents: "Bolt runs commands on remote target nodes and orchestrates ad hoc tasks
      across your server infrastructure. \r\n\r\nIn this challenge, you will run Bolt
      commands to check, start, and verify the Network Time Protocol (NTP) service
      on two target nodes.\r\n\r\nWhen you’re ready to continue, click **Start**."
  assignment: "Now that you've verified your Bolt installation, it's time to get some
    hands-on practice with Bolt by managing the Network Time Protocol (NTP) service
    on two target nodes.\n\n**What is a target?**  \nA target is anything that Bolt
    can connect to, such as servers (nodes), Docker containers, and network devices.\n\n**What
    is NTP?**  \nNTP is a service that synchronizes servers' clocks. It’s important
    to configure this service to start automatically on servers that you add to your
    infrastructure. Accurate timekeeping ensures proper secure communications between
    remote clients and networked servers that host databases, web servers, and other
    applications. \n\nIn this challenge, you will check the status of the NTP service
    on two remote target nodes. Then, you will remotely log into each target node
    to start the service. Finally, you will confirm that the NTP service has been
    started on both target nodes.\n\n# Step 1: Check the NTP service status\nCheck
    the status of the NTP service on two remote target nodes: target1 and target2.
    Hint: The ‘fail’ message that you'll see is expected because you haven't started
    the service yet - you'll do that in step 2. \n\nRun the following command:\n```\nbolt
    command run '/bin/systemctl status ntpd.service' --no-host-key-check --targets
    target1,target2\n```\n\nThis Bolt command logs in remotely to the target nodes
    and returns their NTP service status.  \n\nThe`--no-host-key-check` portion of
    the command is optional and is included here to: \n- Suppress a warning that would
    be shown if the target has never been remotely accessed before. \n- Eliminate
    the need for you to confirm the SSH fingerprint of the remote machine.\n\n✔️ **Result:**\nThe
    ‘fail’ messages indicate that each target is inactive, which is expected at this
    point. Continue to step 2.  \n\n\n# Step 2: Start the NTP service\nThe NTP service
    does not start by default. Run the following command to remotely log in again
    and start the service on the target nodes:\n```\nbolt command run '/bin/systemctl
    start ntpd.service' --no-host-key-check --targets target1,target2\n```\n\n✔️ **Result:**
    Notice the “Successful on 2 targets: target1, target2” message. This means that
    you started the NTP service on both target nodes. Nice job.\n\n# Step 3: Confirm
    that the NTP service is running\nRun the command from step 1 again to confirm
    that the NTP service has been started on both targets.  \n\n✔️ **Result:** Now
    that you have started the NTP service on the targets, notice the detailed information
    and the message “Successful on 2 targets: target1, target2”.\n\nYou can now add
    the targets to an existing infrastructure with additional configuration for their
    specific purposes.\n\nTo continue, click **Check**. "
  tabs:
  - title: Bolt
    type: terminal
    hostname: puppet
  - title: Target 1
    type: terminal
    hostname: target1
  - title: Target 2
    type: terminal
    hostname: target2
  - title: Platform Help
    type: website
    hostname: puppet
    url: https://puppet-kmo.gitbook.io/instruqt-platform-help/
  difficulty: basic
  timelimit: 360
- slug: knowledge-check
  id: qhdb3cpdzkci
  type: challenge
  title: "Knowledge Check \U0001F4A1"
  teaser: Test your knowledge to make sure you've got it down.
  notes:
  - type: text
    contents: "# Great job! \r\n\r\nNext, check your knowledge to make sure you've
      got it down.\r\n\r\nWhen you're ready, click **Start**."
  assignment: "Answer the questions and then click **CHECK YOUR ANSWERS** to see how
    you did.\r\n\r\nWhen you finish the knowledge check, click **Check** to continue."
  tabs:
  - title: Knowledge Check
    type: website
    hostname: puppet
    url: https://survey.alchemer.com/s3/6017440/Knowledge-Check
  - title: Platform Help
    type: website
    hostname: puppet
    url: https://puppet-kmo.gitbook.io/instruqt-platform-help/
  difficulty: basic
  timelimit: 360
- slug: wrapup-and-feedback
  id: vor7wnab2oje
  type: challenge
  title: "Wrap-Up & Feedback \U0001F4AC"
  teaser: Recap what you learned and tell us what you think.
  notes:
  - type: text
    contents: "# Excellent! You’re nearly done!\r\n\r\nClick **Start** to review what
      you learned and let us know what you thought of this track."
  assignment: |-
    In this lab, you learned what Bolt is, how to install it, and how to verify your installation. In a simulated environment, you ran Bolt commands to check the status of the NTP service and start it on two targets. Then, you tested your knowledge to make sure you've got it down.

    Want to learn more about Bolt or Puppet? Check out these resources:
    - [Bolt Docs](https://puppet.com/docs/bolt/latest/bolt.html)
    - [Puppet Compass](https://learn.puppet.com/)
    - [Puppet Community Slack](https://slack.puppet.com/)

    To access the commands used throughout this lab, visit the companion [Lab Aid](https://puppet-kmo.gitbook.io/not-tutorials/-MZKPjwKRKKFuXxxy7ge/).

    Have ideas for improvement? Submit a pull request on [Github](https://github.com/puppetlabs/puppet-practice-labs/tree/main/install-bolt-on-linux) or reach out to us directly at <a href="mailto:education@puppet.com">education@puppet.com</a>.

    To close this track, click **Check**.
  tabs:
  - title: Feedback Survey
    type: website
    hostname: target1c
    url: https://survey.alchemer.com/s3/6263245/Practice-Lab-Feedback-Survey
  - title: Platform Help
    type: website
    hostname: puppet
    url: https://puppet-kmo.gitbook.io/instruqt-platform-help/
  difficulty: basic
  timelimit: 360
checksum: "15167640105515421801"
