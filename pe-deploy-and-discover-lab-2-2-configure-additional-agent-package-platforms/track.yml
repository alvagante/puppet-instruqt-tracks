slug: pe-deploy-and-discover-lab-2-2
id: yvrywfvwitpx
type: sandbox
title: 'PE Deploy and Discover - Lab 2.2: Configure Additional Agent Package Platforms'
teaser: PE Deploy and Discover - 2.2 Configure Additional Agent Package Platforms
description: |-
  In this lab you will:

  1. Attempt an agent installation on an operating system platform that is different from the primary server.
  2. Add an agent package to PE to support another operating system by reconfiguring the primary server to download and add agent packages.
  3. Use the local installation method via the frictionless installation script to install an agent on a target server and sign the agent certificate via autosigning with a challenge password.
icon: ""
tags:
- deploy-and-discover
owner: puppet
developers:
- greg.larkin@puppet.com
private: true
published: false
show_timer: true
challenges:
- slug: configure-additional-agent-package-platforms
  id: znr1665vsmzt
  type: challenge
  title: Configure additional agent package platforms
  teaser: Configure additional agent package platforms
  assignment: |-
    In this lab you will:

    * Attempt an agent installation on an operating system platform that is different from the primary server.
    * Add an agent package to PE to support another operating system by reconfiguring the primary server to download and add agent packages.
    * Use the local installation method via the frictionless installation script to install an agent on a target server and sign the agent certificate via autosigning with a challenge password.

    1. Install an agent on a target by using the installation script with the
    `custom_attributes:challengePassword` parameter:

    ```
    uri='https://puppet:8140/packages/current/install.bash'
    curl --insecure "$uri" | bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT
    ```

    2. In the installation log output, notice the failure:

    ```
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
    100 20122  100 20122    0     0   122k      0 --:--:-- --:--:-- --:--:--  123k
    curl failed to get https://puppet:8140/packages/2019.8.6/el-8-x86_64.bash
    The agent packages needed to support el-8-x86_64 are not present on your master.
    To add them, apply the pe_repo::platform::el_8_x86_64 class to your master node and then run Puppet.
    The required agent packages should be retrieved when puppet runs on the master, after which you can run the install.bash script again.
    #
    ```

    3. The installation fails because the EL8 package is not present on the primary server - the primary server is not EL8. To ensure that the packages are present on the primary server, you must reconfigure the primary server by assigning the appropriate `pe_rep::platform` class.

    4. In the console, click *Node groups*, and in the *PE Infrastructure* group, select the *PE Master* group.

    5. On the *Classes* tab, enter `pe_repo` and select the repo class from the list of classes. Note that the repo classes are listed as `pe_repo::platform::<AGENT_OS_VERSION_ARCHITECTURE>`.

    6. Execute a puppet run on the primary server.

    7. Install an agent on a target by using the installation script with the `custom_attributes:challengePassword parameter`:

    ```
    uri='https://puppet:8140/packages/current/install.bash'
    curl --insecure "$uri" | sudo bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT
    ```
  tabs:
  - title: Puppet
    type: terminal
    hostname: puppet
  - title: Console
    type: service
    hostname: puppet
    port: 443
  - title: linux1
    type: terminal
    hostname: linux1
  - title: windows
    type: service
    hostname: guac
    path: /#/client/c/windows?username=instruqt&password=Passw0rd!
    port: 8080
  difficulty: basic
  timelimit: 1200
checksum: "14285194659163542864"
