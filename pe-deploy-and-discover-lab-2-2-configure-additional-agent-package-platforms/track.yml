slug: pe-deploy-and-discover-lab-2-2
id: yvrywfvwitpx
type: sandbox
title: 'PE Deploy and Discover - Lab 2.2: Configure Additional Agent Package Platforms'
teaser: Learn how to automate configuration management of every server in your infrastructure.
description: |-
  # We're putting the finishing touches on this BETA Puppet Practice Lab — go ahead and take a peek!

  Please help us find any bugs that need to be zapped and share your feedback for improving this learning experience by clicking the **Bug Zapper** tab at the top of each challenge and completing the short survey.

  We welcome your suggestions and value your feedback. If you have additional comments or suggestions after completing this BETA Puppet Practice Lab, please [reach out to us directly](mailto:education@puppet.com).
  ___

  **What you'll learn**

  In this lab you'll learn how to configure the Puppet server to support installing agents on multiple operating systems enabling you to automate configuration management of every server in your infrastructure, whatever its OS.

  **Prerequisites**

  None

  **Before you start**

  Keep an eye on the clock. You have 30 minutes to complete this lab. After 30 minutes, your learning environment expires and your work will not be saved. If you haven't completed the lab, you can simply restart it. Click **Start track** when you're ready to begin.
icon: https://storage.googleapis.com/instruqt-images/bz-smallicon-1.png
tags:
- deploy-and-discover
owner: puppet
developers:
- greg.larkin@puppet.com
private: true
published: true
show_timer: true
challenges:
- slug: configure-additional-agent-package-platforms
  id: znr1665vsmzt
  type: challenge
  title: Configure additional agent package platforms
  teaser: Configure additional agent package platforms
  notes:
  - type: text
    contents: |-
      In this lab you will:

      1. Attempt an agent installation on an operating system platform that is different from the primary server.
      2. Add an agent package to PE to support another operating system by reconfiguring the primary server to download and add agent packages.
      3. Use the local installation method via the frictionless installation script to install an agent on a target server and sign the agent certificate via autosigning with a challenge password.

      Click **Start** when you're ready to begin.
  assignment: |
    1. On the Linux node (**Linux Agent** tab), install an agent by using the installation script with the following parameter: `custom_attributes:challengePassword`

    ```
    uri='https://puppet:8140/packages/current/install.bash'
    curl --insecure "$uri" | bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT
    ```

    2. In the installation log output, notice the failure:

    ```
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
    100 20122  100 20122    0     0   122k      0 --:--:-- --:--:-- --:--:--  123k
    curl failed to get https://puppet:8140/packages/2019.8.6/el-8-x86_64.bash
    The agent packages needed to support el-8-x86_64 are not present on your primary server.
    To add them, apply the pe_repo::platform::el_8_x86_64 class to your master node, and then run Puppet.
    The required agent packages should be retrieved when puppet runs on the master, after which you can run the install.bash script again.
    #
    ```

    The installation fails because the EL8 package is not present on the primary server - the primary server is not EL8. To ensure that the packages are present on the primary server, you must reconfigure the primary server by assigning the appropriate `pe_repo::platform` class.

    3. On the **PE Console** tab, log into PE with username `admin`and password `puppetlabs`.

    4. From the console sidebar, navigate to the **Node groups** page. Expand (click **+**) **PE Infrastructure** and click **PE Master**.

    5. On the **Classes** tab, enter `pe_repo` in **Add new class**. From the list of classes, select the `pe_repo::platform::el_8_x86_64` repo class and click **Add class**.

    6. Commit your change: Click **Commit** in the bottom right of the page.

    7. On the **Primary Server** tab, run Puppet:
    ```
    puppet agent -t
    ```

    8. Install an agent on a target by running the installation script and including the `custom_attributes:challengePassword` parameter to autosign the agent certificate:

    ```
    uri='https://puppet:8140/packages/current/install.bash'
    curl --insecure "$uri" | sudo bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT
    ```

    Congratulations! You configured additional agent package platforms.

    **Find bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**

    To close this lab, click **Next**.
  tabs:
  - title: Primary Server
    type: terminal
    hostname: puppet
  - title: PE Console
    type: service
    hostname: puppet
    port: 443
  - title: Linux Agent
    type: terminal
    hostname: nixagent
  - title: Windows Agent
    type: service
    hostname: guac
    path: /#/client/c/winagent?username=instruqt&password=Passw0rd!
    port: 8080
  - title: "Bug Zapper \U0001F99F⚡"
    type: website
    hostname: guac
    url: https://docs.google.com/forms/d/e/1FAIpQLSdY-3mNOlLsOXazyxzw295dUHMgU8ThEBS_iITfO0Pd8uVcIQ/viewform?embedded=true
  difficulty: basic
  timelimit: 1200
checksum: "13260085656254475401"
